/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-12-05 09:32:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsh.util.Tools;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsh.util.Tools");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";
    String clientIp = Tools.getLocalIp(request);

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("    <title>ERP系统</title>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n");
      out.write("    <!-- 指定以IE8的方式来渲染 -->\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\"/>\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"");
      out.print(path);
      out.write("/images/favicon.ico\" type=\"image/x-icon\"/>\r\n");
      out.write("    <link type=\"text/css\" rel=\"stylesheet\" href=\"");
      out.print(path );
      out.write("/css/css.css\"/>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.print(path );
      out.write("/js/jquery-1.8.0.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.print(path );
      out.write("/js/common/common.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body id=\"login_body\">\r\n");
      out.write("<form action=\"admin.html\">\r\n");
      out.write("    <div id=\"login_main\">\r\n");
      out.write("        <div id=\"login\">\r\n");
      out.write("            <p id=\"login_signal\"><img src=\"");
      out.print(path);
      out.write("/images/login_tip.jpg\" width=\"108\" height=\"29\" alt=\"login\"/></p>\r\n");
      out.write("            <p id=\"txt_username\">\r\n");
      out.write("                <label for=\"user_name\">用户名：</label>\r\n");
      out.write("            </p>\r\n");
      out.write("            <p id=\"txt_userpwd\">\r\n");
      out.write("                <label for=\"user_vcode\" id=\"user_vcodepwd\">密&nbsp;&nbsp;&nbsp;&nbsp;码:</label>\r\n");
      out.write("            </p>\r\n");
      out.write("            <input type=\"text\" id=\"user_name\"/>\r\n");
      out.write("            <input type=\"password\" id=\"user_pwd\"/>\r\n");
      out.write("            <p id=\"tip_username\" style=\"display: none\"><span class=\"error_input\">用户名不正确</span></p>\r\n");
      out.write("            <p id=\"tip_userpwd\" style=\"display: none\">密码不能为空</p>\r\n");
      out.write("            <input type=\"button\" value=\" \" id=\"btn_login\"/>\r\n");
      out.write("        </div>\r\n");
      out.write("        <p id=\"copyright\">Copyright © 2018-2020 乙山(JOKE) <a style=\"color:#00458a;\"\r\n");
      out.write("                                                                   href=\"https://gitee.com/jishenghua/JSH_ERP\"\r\n");
      out.write("                                                                   target=\"_blank\">乙山ERP_v1.0</a></p>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    //初始化界面\r\n");
      out.write("    $(function () {\r\n");
      out.write("        //进入页面聚焦在username输入框,方便 用户输入\r\n");
      out.write("        $(\"#user_name\").focus();\r\n");
      out.write("        browserFit();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //浏览器适配\r\n");
      out.write("    function browserFit() {\r\n");
      out.write("        if (getOs() == 'MSIE')\r\n");
      out.write("            $(\"#user_vcodepwd\").empty().append(\"密&nbsp;&nbsp;&nbsp;&nbsp;码：\");\r\n");
      out.write("        else\r\n");
      out.write("            $(\"#user_vcodepwd\").empty().append(\"密&nbsp;&nbsp;&nbsp;&nbsp;码：\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //初始化键盘enter事件\r\n");
      out.write("    $(document).keydown(function (event) {\r\n");
      out.write("        //兼容 IE和firefox 事件\r\n");
      out.write("        var e = window.event || event;\r\n");
      out.write("        var k = e.keyCode || e.which || e.charCode;\r\n");
      out.write("        //兼容 IE,firefox 兼容\r\n");
      out.write("        var obj = e.srcElement ? e.srcElement : e.target;\r\n");
      out.write("        //绑定键盘事件为 id是usename 和password的输入框才可以触发键盘事件 13键盘事件\r\n");
      out.write("        if (k == \"13\" && (obj.id == \"user_name\" || obj.id == \"user_pwd\"))\r\n");
      out.write("            checkUserInput();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //登录按钮绑定处理事件\r\n");
      out.write("    $('#btn_login').bind({\r\n");
      out.write("        click: checkUserInput\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //检测用户输入数据\r\n");
      out.write("    function checkUserInput() {\r\n");
      out.write("        var username = $.trim($('#user_name').val());\r\n");
      out.write("        var password = $.trim($('#user_pwd').val());\r\n");
      out.write("        if (null == username || 0 == username.length) {\r\n");
      out.write("            $(\"#user_name\").val(\"\").focus();\r\n");
      out.write("            $(\"#tip_userpwd\").hide();\r\n");
      out.write("            $(\"#tip_username\").empty().append('<span class=\"error_input\">用户名不能为空</span>').show();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        else\r\n");
      out.write("            $(\"#tip_username\").hide();\r\n");
      out.write("\r\n");
      out.write("        if (null == password || 0 == password.length) {\r\n");
      out.write("            $(\"#user_pwd\").val(\"\").focus();\r\n");
      out.write("            $(\"#tip_userpwd\").empty().append('<span class=\"error_input\">密码不能为空</span>').show();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        else\r\n");
      out.write("            $(\"#tip_userpwd\").hide();\r\n");
      out.write("        if (username != null && username.length != 0\r\n");
      out.write("            && password != null && password.length != 0) {\r\n");
      out.write("            $(\"#user_name\").focus();\r\n");
      out.write("            $(\"#tip_username\").hide();\r\n");
      out.write("            $(\"#tip_userpwd\").hide();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: \"post\",\r\n");
      out.write("                url: \"");
      out.print(path);
      out.write("/user/login.action\",\r\n");
      out.write("                dataType: \"json\",\r\n");
      out.write("                data: ({\r\n");
      out.write("                    loginame: username,\r\n");
      out.write("                    password: password,\r\n");
      out.write("                    clientIp: \"");
      out.print(clientIp);
      out.write("\"\r\n");
      out.write("                }),\r\n");
      out.write("                success: function (loginInfo) {\r\n");
      out.write("                    var loginInfoTip = loginInfo.showModel.msgTip;\r\n");
      out.write("                    //用户名不存在，清空输入框并定位到用户名输入框\r\n");
      out.write("                    if (loginInfoTip.indexOf(\"user is not exist\") != -1) {\r\n");
      out.write("                        $(\"#user_pwd\").val(\"\");\r\n");
      out.write("                        $(\"#user_name\").val(\"\").focus();\r\n");
      out.write("                        $(\"#tip_userpwd\").hide();\r\n");
      out.write("                        $(\"#tip_username\").empty().append('<span class=\"error_input\">用户名不存在</span>').show();\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    else if (loginInfoTip.indexOf(\"user password error\") != -1) {\r\n");
      out.write("                        $(\"#user_pwd\").val(\"\").focus();\r\n");
      out.write("                        $(\"#tip_userpwd\").empty().append('<span class=\"error_input\">用户密码错误</span>').show();\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    else if (loginInfoTip.indexOf(\"access service error\") != -1) {\r\n");
      out.write("                        //$(\"#user_name\").val(\"\").focus();\r\n");
      out.write("                        $(\"#tip_userpwd\").hide();\r\n");
      out.write("                        $(\"#tip_username\").empty().append('<span class=\"error_input\">后台访问错误</span>').show();\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    //跳转到用户管理界面\r\n");
      out.write("                    else if (loginInfoTip.indexOf(\"user can login\") != -1 || loginInfoTip == \"user already login\") {\r\n");
      out.write("                        window.location.href = \"");
      out.print(path);
      out.write("/login.action\";\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                //此处添加错误处理\r\n");
      out.write("                error: function () {\r\n");
      out.write("                    alert(\"后台访问错误，请联系管理员！\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //处理tip提示\r\n");
      out.write("    //定义变量控制密码提示显示\r\n");
      out.write("    var temp_value = \"\";\r\n");
      out.write("    $(\"#user_name\").add(\"#user_pwd\").unbind().bind({\r\n");
      out.write("        'click keyup': function () {\r\n");
      out.write("            var value = $.trim($(this).val());\r\n");
      out.write("            if (value.length > 0) {\r\n");
      out.write("                $(\"#tip_username\").hide();\r\n");
      out.write("                $(\"#tip_userpwd\").hide();\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        blur: function () {\r\n");
      out.write("            //兼容 IE和firefox 事件\r\n");
      out.write("            var e = window.event || event;\r\n");
      out.write("            //兼容 IE,firefox 兼容\r\n");
      out.write("            var obj = e.srcElement ? e.srcElement : e.target;\r\n");
      out.write("            var value = $.trim($(this).val());\r\n");
      out.write("            if (obj.id == \"user_name\")\r\n");
      out.write("                temp_value = value;\r\n");
      out.write("            if (value.length == 0) {\r\n");
      out.write("                if (obj.id == \"user_name\")\r\n");
      out.write("                    $(\"#tip_username\").empty().append('<span class=\"error_input\">用户名不能为空</span>').show();\r\n");
      out.write("\r\n");
      out.write("                if (obj.id == \"user_pwd\" && temp_value.length > 0)\r\n");
      out.write("                    $(\"#tip_userpwd\").empty().append('<span class=\"error_input\">密码不能为空</span>').show();\r\n");
      out.write("                ;\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                if (obj.id == \"user_pwd\" && value.length > 0 && temp_value.length == 0) {\r\n");
      out.write("                    $(\"#tip_username\").show();\r\n");
      out.write("                    $(\"#tip_userpwd\").hide();\r\n");
      out.write("                }\r\n");
      out.write("                else {\r\n");
      out.write("                    $(\"#tip_username\").hide();\r\n");
      out.write("                    $(\"#tip_userpwd\").hide();\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
